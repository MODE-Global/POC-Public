name: Database Sync - biweekly
on:
  workflow_dispatch: # adding the workflow_dispatch so it can be triggered manually,
  # schedule:
  #    - cron: '*/6 * * * *'
  #    - cron: '*/10 * * * *'

jobs:
  Schedule_Validation:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.check.outputs.triggered }}
    steps:
      - name: cron
        run: |
            if [[ "$(date '+%m-%d')" == "08-16" ]]; then
                echo "Triggering the Scheduled Pipeline"
            else
              echo "Skipping the Pipeline as it is not scheduled to run in this specified date"
              exit 1           
            fi

# name: Database Sync - Tuesday

# on:
#   workflow_dispatch:
#   #schedule:
#     #- cron: '*/2 * * * *'
     
# jobs:
  dev-btms:
    needs: [Schedule_Validation]
    if: ${{ needs.Schedule_Validation.outputs.status }}== 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Job1 Testing
        run: echo "Job1 first"
    # # outputs:
    # #   job_status: ${{ job.status }}
    #   - name: Intentionally fail Job 1
    #     run: exit 1    
        
  dev-btms-history:
    needs: [Schedule_Validation]
    if: ${{ needs.Schedule_Validation.outputs.status }}== 'true'
    runs-on: ubuntu-latest
    steps:
      # - name: Job2 Testing
      #   run: echo "Job2 Second"
      - name: Intentionally fail Job 2
        run: exit 1
    outputs:
      job_status: ${{ job.status }}

  dev-tms:
    needs: [dev-btms, dev-btms-history, Schedule_Validation] 
    if: always () & ${{ needs.Schedule_Validation.outputs.status }}== 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Delay for 30 sec
        run: sleep 10
      - name: Job3 Testing
        run: echo "Job3 Third"

        
  # dev-tms:
  #   runs-on: ubuntu-latest
  #   needs: [dev-btms, dev-btms-history]
  #   if: ${{ needs.dev-btms.outputs.status != 'skip' && needs.dev-btms-history.outputs.status != 'skip' }}
  #   steps:
  #     - name: Delay for 30 sec
  #       run: sleep 60 # 900 seconds = 15 minutes
  #     - name: Job3 Testing
  #       run: echo "Job3 Third"
      #- name: Intentionally fail Job 3
        #run: exit 1    
        
  # dev-imaging:
  #   needs: [dev-btms, dev-btms-history]
  #   if: always()
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checking
  #       id: schedule_validation
  #       run: echo "::set-output name=status::true"
  #     - name: sleep 10 sec  
  #       run: sleep 10 # 900 seconds = 15 minutes
  #     - name: Job4 Testing
  #       run: echo "Job4 Third" 
  #     - name: Intentionally fail Job 4
  #       run: exit 1    
        
        
  # qc-btms:
  #   needs: [Schedule_Validation]
  #   if: ${{ needs.Schedule_Validation.outputs.status }}== 'true'
  #   runs-on: ubuntu-latest
  #   needs: [dev-tms, dev-imaging]
  #   if: always() # always run even if a previous step fails
  #   steps:
  #     - name: Delay for 30 sec
  #       run: sleep 10 # 900 seconds = 15 minutes
  #     - name: Job5 Testing
  #       run: echo "Job5 Third"
  #     - name: Intentionally fail Job 4
  #       run: exit 1  
        
        
  # qb-btms-history:
  #   needs: [Schedule_Validation]
  #   if: ${{ needs.Schedule_Validation.outputs.status }}== 'true'
  #   runs-on: ubuntu-latest
  #   needs: [dev-tms, dev-imaging]
  #   if: always() # always run even if a previous step fails
  #   steps:
  #     - name: Delay for 30 sec
  #       run: sleep 10 # 900 seconds = 15 minutes
  #     - name: Job6 Testing
  #      run: echo "Job6 Third"
      #- name: Intentionally fail Job 4
        #run: exit 1  
