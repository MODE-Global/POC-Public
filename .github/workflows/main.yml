name: Stage
on:
  workflow_dispatch: # adding the workflow_dispatch so it can be triggered manually,
  schedule:
     - cron: '*/6 * * * *'
     - cron: '*/10 * * * *'

jobs:      
  dev-btms:
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v3
      
      - name: cron validation
        run: |
          chmod +x cron.sh
          ./cron.sh
          
      - uses: ./.github/workflows/checking.yml
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      
  dev-btms-history:
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v3
      
      - name: cron validation
        run: |
          chmod +x cron.sh
          ./cron.sh
          
      # - name: Job2 Testing
      #   run: echo "Job2 Second"
      # - name: Intentionally fail Job 2
      #   run: exit 1

      - uses: ./.github/workflows/checking.yml
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      
  dev-tms:
    needs: [dev-btms, dev-btms-history] 
    if: always ()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: cron validation
        run: |
          chmod +x cron.sh
          ./cron.sh
      
      - name: Delay for 30 sec
        run: sleep 10

      - uses: ./.github/workflows/checking.yml
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        
      # - name: Job3 Testing
      #   run: echo "Job3 Third"
        
  # dev-imaging:
  #   needs: [dev-btms, dev-btms-history]
  #   if: always ()
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
      
  #     - name: cron validation
  #       run: |
  #         chmod +x cron.sh
  #         ./cron.sh
          
  #     - name: Delay for 30 sec
  #       run: sleep 10
  #     # - name: Job4 Testing
  #     #   run: echo "Job4 Third" 
  #     - name: Intentionally fail Job 4
  #       run: exit 1    
        
        
  # qc-btms:
  #   needs: [Schedule_Validation]
  #   if: ${{ needs.Schedule_Validation.outputs.status }}== 'true'
  #   runs-on: ubuntu-latest
  #   needs: [dev-tms, dev-imaging]
  #   if: always() # always run even if a previous step fails
  #   steps:
  #     - name: Delay for 30 sec
  #       run: sleep 10 # 900 seconds = 15 minutes
  #     - name: Job5 Testing
  #       run: echo "Job5 Third"
  #     - name: Intentionally fail Job 4
  #       run: exit 1  
        
        
  # qb-btms-history:
  #   needs: [Schedule_Validation]
  #   if: ${{ needs.Schedule_Validation.outputs.status }}== 'true'
  #   runs-on: ubuntu-latest
  #   needs: [dev-tms, dev-imaging]
  #   if: always() # always run even if a previous step fails
  #   steps:
  #     - name: Delay for 30 sec
  #       run: sleep 10 # 900 seconds = 15 minutes
  #     - name: Job6 Testing
  #      run: echo "Job6 Third"
      #- name: Intentionally fail Job 4
        #run: exit 1  
